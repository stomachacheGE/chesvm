%function prediction = modify_score(models, test_datas, feat_name, params)

feat_name = 'hog';

classifi_res_dir = fullfile('.', params.datasets_params.results_folder,'classifications');
esvm_res_dir = fullfile(classifi_res_dir, 'esvm_1');
models_dir = fullfile('.', params.datasets_params.results_folder,'models');
%get number of test images
num_test_images = 0;
for i = 1:length(test_datas)
    num_test_images = num_test_images + numel(test_datas{i});
end
%get number of models
num_models = 0;
for i = 1:length(models)
    num_models = num_models + numel(models{i});
end

counter = 0;

biases = cell(length(models),1);
for m = 1:length(models)
    
    biases{m} = zeros(1,length(models{m}));

 for n = 1:length(models{m}) 

      model = models{m}{n};
      model_filer = sprintf('%s/%s/%s_esvm_%s_%s_wo_hn.mat',models_dir, model.cls_name, feat_name, model.cls_name, model.img_id);
      model_struct = load(model_filer);
      model_struct = model_struct.m;

      biases{m}(1,n) = model_struct.self_bias;
 end   
end

for i = 1:length(test_datas)
  
  cls_res_dir = fullfile(esvm_res_dir, test_datas{i}{1}.cls_name);

  for j = 1:length(test_datas{i})
      
      model_counter = 0;
      
      res = zeros(size(models));
      
      filer = sprintf('%s/%s_%s_score.mat',cls_res_dir, feat_name, test_datas{i}{j}.img_id);
      
      if exist(filer,'file')
         
          result = load(filer);
          result = result.result;
          
          for m = 1:length(models)
    
          
            result.scores{m} = result.scores{m} + biases{m};
          end 
          
          if reset_i
         % save(filer,'result');
      else 
         fprintf(1,'Score result from %d does not exist \n', counter)
      end
  end
end

